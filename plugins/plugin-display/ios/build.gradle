dependencies {
    compile project(':core/ios')
    compile project(':plugin-display')
    compile project(':plugin-lifecycle')
}

compileJava {
    doFirst {
println ("CP = $classpath.asPath");

        options.compilerArgs = [
            '--module-path', classpath.asPath,
            '--add-modules', 'com.gluonhq.charm.down.core,com.gluonhq.charm.down.plugins.display'
        ]
        classpath = sourceSets.main.compileClasspath
    }
}

ext.description = 'API to access display features for the iOS platform'

def service = "Display"

task xcodebuild {
    doLast {
        xcodebuildIOS("$project.buildDir","$project.projectDir", "$service")
    }
}

jar {
    dependsOn xcodebuild
    from("$project.buildDir/native/lib${service}.a")
    {
        into "native"
    }
}
